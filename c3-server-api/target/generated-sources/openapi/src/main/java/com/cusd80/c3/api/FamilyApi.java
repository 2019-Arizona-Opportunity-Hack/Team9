/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.cusd80.c3.api;

import com.cusd80.c3.api.model.Family;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-10-19T21:10:37.422219-07:00[America/Phoenix]")

@Validated
@Api(value = "family", description = "the family API")
public interface FamilyApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "Returns a family that matches the provided caregiver id.", nickname = "familyCaregiverIdGet", notes = "", response = Family.class, tags={ "Family", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns a family that matches the given caregiver.", response = Family.class),
        @ApiResponse(code = 400, message = "The request could not be understood by the server due to malformed data."),
        @ApiResponse(code = 404, message = "The specified resource was not found."),
        @ApiResponse(code = 405, message = "The server has not implemented the requested HTTP method."),
        @ApiResponse(code = 500, message = "A system error has occurred and the request was not processed.") })
    @RequestMapping(value = "/family/{caregiver_id}",
        produces = { "application/json", "text/plain" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Family> familyCaregiverIdGet(@ApiParam(value = "The caregiver ID",required=true) @PathVariable("caregiver_id") String caregiverId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"caregiver\" : {    \"caregiver_id\" : 123,    \"income_amount\" : 45000,    \"self_identified_as\" : \"Veteran\",    \"housing_type\" : \"Evacuee\",    \"education_level\" : \"GED\",    \"employment_type\" : \"None\",    \"insurance_type\" : \"Private\",    \"child_care_center\" : \"Head_Start\",    \"marital_status\" : \"Married\",    \"person\" : {      \"$ref\" : \"#/components/examples/personExample/value\"    }  },  \"dependents\" : [ {    \"dependent_id\" : \"3fb6798c-c1cd-47d8-a123-49812f204cba\",    \"school\" : \"Walker High\",    \"relationship_to_caregiver\" : \"Child\"  }, {    \"dependent_id\" : \"3fb6798c-c1cd-47d8-a123-49812f204cba\",    \"school\" : \"Walker High\",    \"relationship_to_caregiver\" : \"Child\"  } ]}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "Update a caregiver and related dependents.", nickname = "familyCaregiverIdPut", notes = "", tags={ "Family", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The request has processed successfully."),
        @ApiResponse(code = 400, message = "The request could not be understood by the server due to malformed data."),
        @ApiResponse(code = 404, message = "The specified resource was not found."),
        @ApiResponse(code = 405, message = "The server has not implemented the requested HTTP method."),
        @ApiResponse(code = 500, message = "A system error has occurred and the request was not processed.") })
    @RequestMapping(value = "/family/{caregiver_id}",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<Void> familyCaregiverIdPut(@ApiParam(value = "The caregiver ID",required=true) @PathVariable("caregiver_id") String caregiverId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody Family family) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "Create a new family consisting of a caregiver and optional dependents.", nickname = "familyPost", notes = "", tags={ "Family", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "The request was processed successfully and the resource has been created."),
        @ApiResponse(code = 400, message = "The request could not be understood by the server due to malformed data."),
        @ApiResponse(code = 404, message = "The specified resource was not found."),
        @ApiResponse(code = 405, message = "The server has not implemented the requested HTTP method."),
        @ApiResponse(code = 500, message = "A system error has occurred and the request was not processed.") })
    @RequestMapping(value = "/family",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> familyPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Family family) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
